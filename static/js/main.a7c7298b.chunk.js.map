{"version":3,"sources":["components/CurrencySelect.js","App.js","reportWebVitals.js","index.js"],"names":["Option","props","isDisabled","data","className","value","flag","label","unit","balance","ValueContainer","children","v","getValue","CurrencySelect","components","isNumber","val","isNaN","wallets","currency","currencies","roundMoney","Math","round","currencyFormatter","IMask","createPipe","mask","Number","scale","radix","signed","unmask","thousandsSeparator","padFractionalZeros","App","React","useState","amount","setAmount","rates","setRates","fromCurrencyVal","setFromCurrencyVal","toCurrencyVal","setToCurrencyVal","isExchanging","setIsExchanging","isExchangeSuccess","setIsExchangeSuccess","errors","setErrors","clearError","name","_errors","useEffect","validate","fetch","encodeURIComponent","then","res","json","result","catch","error","fetchRate","message","currentWallet","rate","toUpperCase","toAmount","setTimeout","max","floor","random","forEach","i","exchange","currencyValue","find","wallet","currentToWallet","fromCurrency","toCurrency","rest","alertMessage","Object","values","map","isSearchable","options","w","c","onChange","onAccept","unmaskedValue","el","input","placeholder","toString","onClick","from","concat","isOptionDisabled","option","readOnly","style","color","length","Alert","severity","Button","disabled","errorCount","keys","hasBlockedError","variant","disableElevation","size","Backdrop","open","CircularProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c7298b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Select, {components} from \"react-select\";\r\n\r\nimport './flag-icon.css';\r\n\r\n// Custom Option component for CurrencySelect\r\nconst Option = (props) => {\r\n  const {isDisabled, data} = props;\r\n  // console.log(props);\r\n\r\n  return <components.Option {...props} className={`option ${data.value === 'none' ? 'empty-option' : ''} ${isDisabled ? 'disabled' : ''}`}>\r\n    {data.value !== 'none' ? <><span className={`flag-icon flag-icon-${data.flag}`}/>\r\n    <span className={'clabel'}>{data.label}</span>\r\n    {data['balance'] ? <span className={'balance'}>{data.unit} {data.balance}</span> : null}</> : null}\r\n  </components.Option>;\r\n}\r\n\r\n// Custom ValueContainer component for CurrencySelect\r\nconst ValueContainer = ({children, ...props}) => {\r\n  const v = props.getValue();\r\n\r\n  return v[0] ? <components.ValueContainer {...props} className={'value-container'}>\r\n    <span className={`flag-icon flag-icon-${v[0].flag}`}/>\r\n    <span>{v[0].label}</span>\r\n    {children[1] ? <div>{[children[1]]}</div> : null}\r\n  </components.ValueContainer> : null;\r\n}\r\n\r\n// CurrencySelect component\r\nexport function CurrencySelect(props) {\r\n  return <Select\r\n    {...props}\r\n    className={\"currency-select\"}\r\n    // menuIsOpen={true}\r\n    components={{\r\n      ValueContainer,\r\n      Option,\r\n    }}/>;\r\n}","import React, {useEffect} from \"react\";\nimport './App.css';\n\nimport {Backdrop, Button, CircularProgress} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\n\nimport CheckCircleTwoToneIcon from '@material-ui/icons/CheckCircleTwoTone';\n\nimport {IMaskInput} from \"react-imask\";\nimport IMask from \"imask\";\nimport {CurrencySelect} from \"./components/CurrencySelect\";\n\n/**\n * check if val is a number\n */\nfunction isNumber(val) {\n  return !isNaN(+val);\n}\n\nconst wallets = [\n  {currency: 'usd', balance: 200},\n  {currency: 'gbp', balance: 380},\n  {currency: 'eur', balance: 5230}\n];\n\nconst currencies = [\n  {label: 'USD', value: 'usd', unit: '$', flag: 'usa'},\n  {label: 'GBP', value: 'gbp', unit: '£', flag: 'gbr'},\n  {label: 'EUR', value: 'eur', unit: '€', flag: 'eun'}\n];\n\n// generate random integer which less than max\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\n// round money value which represent by float\n// todo: use cent unit and integer to represent money\nfunction roundMoney(val) {\n  return Math.round(val * 100) / 100;\n}\n\n// format currency number\nconst currencyFormatter = IMask.createPipe({\n  mask: Number,\n  scale: 2,\n  radix: '.',\n  signed: false,\n  unmask: 'typed',\n  thousandsSeparator: ',',\n  padFractionalZeros: false\n});\n\n\nfunction App() {\n  const [amount, setAmount] = React.useState('');\n  const [rates, setRates] = React.useState({});\n  const [fromCurrencyVal, setFromCurrencyVal] = React.useState('usd');\n  const [toCurrencyVal, setToCurrencyVal] = React.useState('none');\n  const [isExchanging, setIsExchanging] = React.useState(null);\n  const [isExchangeSuccess, setIsExchangeSuccess] = React.useState(false);\n\n  const [errors, setErrors] = React.useState({});\n\n  // clear specific error\n  function clearError(name) {\n    setErrors(errors => {\n      const _errors = {...errors};\n      if (_errors[name]) delete _errors[name]\n      return _errors;\n    });\n  }\n\n\n  // initialize on app load\n  useEffect(() => {\n    // validate['amount'](amount);\n    validate['from-currency'](fromCurrencyVal);\n    validate['to-currency'](toCurrencyVal);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  // refresh exchange rate when from-currency or to-currency is changed\n  useEffect(() => {\n    fetch(`https://api.frankfurter.app/latest?base=${encodeURIComponent(fromCurrencyVal)}`)\n      .then(res => res.json())\n      .then(\n        result => {\n          setRates(result.rates);\n\n          // clear previous error\n          clearError('fetchRate');\n        },\n      )\n      .catch(\n        error => {\n          setErrors(errors => ({\n            ...errors,\n            fetchRate: {message: 'Cannot update exchange rates [ ' + error + ' ]'}\n          }));\n        }\n      );\n\n  }, [fromCurrencyVal, toCurrencyVal]);\n\n  // input validation functions\n  const validate = {\n    'amount': (val) => {\n      if (val > currentWallet.balance) {\n        setErrors({\n          ...errors,\n          amount: {message: 'No sufficient balance.'}\n        })\n      } else {\n        clearError('amount');\n      }\n    },\n\n    'from-currency': (val) => {\n      if (val === toCurrencyVal) {\n        setErrors({\n          ...errors,\n          'to-currency': {\n            message: 'Exchange can only be done in different currency.'\n          }\n        })\n      } else {\n        clearError('to-currency');\n      }\n    },\n\n    'to-currency': (val) => {\n      if (val === fromCurrencyVal) {\n        setErrors({\n          ...errors,\n          'to-currency': {\n            message: 'Exchange can only be done in different currency.'\n          }\n        })\n      } else {\n        clearError('to-currency');\n      }\n    }\n  }\n\n  const onAmountChange = (value, mask) => {\n    setAmount(mask.unmaskedValue);\n    validate[mask.el.input.name](mask.unmaskedValue);\n  };\n\n  const onFromCurrencyChange = (val) => {\n    setFromCurrencyVal(val.value);\n    setAmount('');\n    validate['from-currency'](val.value);\n    validate['amount']('');\n  }\n\n\n  const onToCurrencyChange = (val) => {\n    setToCurrencyVal(val.value);\n    validate['to-currency'](val.value);\n  }\n\n  function onSwitchClick() {\n    // don't switch if to-currency hasn't be selected\n    if (toCurrencyVal === 'none') return;\n\n    if (toCurrencyVal !== fromCurrencyVal) {\n      const from = fromCurrencyVal;\n      setAmount('');\n      setFromCurrencyVal(toCurrencyVal);\n      setToCurrencyVal(from);\n    }\n  }\n\n  // call server api to exchange when click the exchange button\n  // here is just a simulation by local data operation\n  useEffect(() => {\n    if (isExchanging) {\n      /**\n       * simulate long-time server operation\n       * there are one sixth opportunities to simulate failed status\n       */\n\n      const {rates, amount, toCurrencyVal, fromCurrencyVal} = isExchanging;\n      const rate = rates[toCurrencyVal.toUpperCase()];\n      const toAmount = roundMoney(amount * rate);\n      // console.log(amount, rate, toAmount);\n\n      setTimeout(() => {\n        // simulate success/failed status\n        const success = getRandomInt(5);\n        if (success) {\n          wallets.forEach((v, i) => {\n            if (v.currency === fromCurrencyVal) v.balance = roundMoney(v.balance - amount);\n            else if (v.currency === toCurrencyVal) v.balance = roundMoney(v.balance + toAmount);\n          });\n\n          setIsExchangeSuccess(true);\n\n          // setTimeout(() => {\n          //   setIsExchanging(null);\n          // }, 5000);\n        } else {\n          setErrors(errors => ({\n            ...errors,\n            exchange: {message: 'Exchange failed.'}\n          }));\n\n          // clear exchange error notify after seconds\n          setTimeout(() => {\n            clearError('exchange');\n          }, 10000);\n          setIsExchanging(null);\n        }\n      }, 2000);\n    }\n  }, [isExchanging]);\n\n  function onContinueClick() {\n    setIsExchanging({rates, amount, toCurrencyVal, fromCurrencyVal});\n    setIsExchangeSuccess(false);\n\n    // clear previous exchange error\n    clearError('exchange');\n  }\n\n  function onExchangeNotifyClick() {\n    if (isExchangeSuccess) {\n      setIsExchanging(null);\n      setIsExchangeSuccess(false);\n    }\n  }\n\n  // search currency information\n  const currency = (currencyValue) => {\n    // todo: optimize searching performance\n    return currencies.find((v) => v.value === currencyValue)\n  }\n\n  // search wallet information\n  const wallet = (currencyValue) => {\n    // todo: optimize searching performance\n    return wallets.find((v) => v.currency === currencyValue)\n  }\n\n  // check if there are errors which block operation\n  function hasBlockedError() {\n    const errorCount = Object.keys(errors).length;\n    if (errorCount === 1 && errors['exchange']) return false;\n    return errorCount > 0;\n  }\n\n  const currentWallet = wallet(fromCurrencyVal);\n  const currentToWallet = wallet(toCurrencyVal);\n  const fromCurrency = currency(fromCurrencyVal);\n  const toCurrency = toCurrencyVal !== 'none' ? currency(toCurrencyVal) : null;\n\n  // don't display to-currency == from-currency error message\n  const {'to-currency': _v, ...rest} = errors;\n  const alertMessage = Object.values(rest).map((v, i) => <div key={i}>{v.message}</div>);\n\n  // current from-currency => to-currency rate\n  const rate = toCurrencyVal !== 'none' ?\n    ((fromCurrencyVal !== toCurrencyVal) ? rates[toCurrencyVal.toUpperCase()] : 1) : null;\n\n  // expected amount after exchanging\n  const toAmount = (isNumber(amount) && amount && rate) ? roundMoney(amount * rate) : '';\n\n  // let amountInput = null;\n  return (\n    <div className=\"App\">\n      <h1>Money Exchange</h1>\n      <div className={\"clearfix\"}>\n\n        {/* from curreny */}\n        <div className={\"from-currency\"}>\n          <div className={\"tip-label noselect\"}>Sell</div>\n          <div className={\"currency-input-box\"}>\n            <div className={\"type-box\"}>\n\n              <CurrencySelect name={'from-currency'}\n                              value={{...fromCurrency, balance: currentWallet.balance}}\n                              isSearchable={false}\n                              options={wallets.map((w, i) => {\n                                let c = currency(w.currency);\n                                return {...c, balance: w.balance}\n                              })}\n                              onChange={onFromCurrencyChange}/>\n            </div>\n            <div className={`amount-box ${errors['amount'] ? \"error\" : \"\"}`}>\n              <label>{fromCurrency.unit}</label>\n              <IMaskInput name={\"amount\"} onAccept={onAmountChange} className={\"amount\"}\n                          mask={Number}\n                          scale={2}\n                          radix={\".\"}\n                          signed={false}\n                          padFractionalZeros={false}\n                          thousandsSeparator={\",\"}\n                          unmask={true}\n                          value={amount}\n                          placeholder={\"0.00\"}/>\n            </div>\n          </div>\n          <div\n            className={\"balance\"}>Balance: <strong>{fromCurrency.unit}{currencyFormatter(currentWallet.balance.toString())}</strong>\n          </div>\n        </div>\n        <div className={\"switch noselect\"} onClick={onSwitchClick}>&lt;&gt;</div>\n\n        {/* to curreny */}\n        <div className={\"to-currency\"}>\n          <div className={\"tip-label noselect\"}>Get</div>\n          <div className={\"currency-input-box\"}>\n            <div className={`type-box ${errors['to-currency'] ? 'error' : ''}`}>\n              <CurrencySelect name={'to-currency'}\n                              value={toCurrency ? {...toCurrency} : {value: 'none'}}\n                              isSearchable={false}\n                              options={[{value: 'none'}].concat(currencies).map((c, i) => {\n                                return {...c}\n                              })}\n                              isOptionDisabled={option => option.value === fromCurrencyVal}\n                              onChange={onToCurrencyChange}/>\n            </div>\n            <div className={\"amount-box\"}>\n              <label>{toCurrency ? toCurrency.unit : ''}</label>\n              <input className={\"amount\"} readOnly={true}\n                     value={currencyFormatter(toAmount.toString())}/>\n            </div>\n          </div>\n          <div className={`rate ${!toCurrency ? 'hide' : ''}`}>\n            1 {fromCurrency.label} = <strong>{rate}</strong> {toCurrency ? toCurrency.label : ''}\n            {fromCurrencyVal !== toCurrencyVal ? <><br/>\n              <span style={{color: \"rgb(202, 120, 0)\"}}>The rate might change anytime</span></> : null}</div>\n        </div>\n      </div>\n\n      {/* alert message */}\n      <div className={\"alert-message-box\"}>\n        {/*<Alert severity={\"info\"}>The exchange rate might change anytime.</Alert>*/}\n        {alertMessage.length ? <Alert severity={\"error\"}>{alertMessage}</Alert> : null}\n      </div>\n\n      <div>\n        <Button\n          disabled={!isNumber(amount) || !amount || toCurrencyVal === fromCurrencyVal || !toCurrency || isExchanging !== null || hasBlockedError()}\n          variant={\"contained\"}\n          disableElevation\n          color={\"primary\"} size={\"large\"}\n          className={\"exchange-button\"}\n          onClick={onContinueClick}>{!isExchanging ? 'Continue' : 'Exchanging ...'}</Button>\n      </div>\n\n      <Backdrop className={\"exchange-notify\"} open={isExchanging !== null} onClick={onExchangeNotifyClick}>\n        {!isExchangeSuccess ? <div className={\"exchange-progress\"}><CircularProgress color=\"inherit\"/></div> : null}\n        {isExchangeSuccess ? <div className={\"exchange-success-notify\"}>\n          <CheckCircleTwoToneIcon className={\"icon\"}/>\n          <div className={\"message\"}>Completed<br/></div>\n          <div className={\"balance\"}>\n            <strong>{toCurrency.label}</strong> balance:\n            <div className={'currency'}>{toCurrency.unit} {currencyFormatter(currentToWallet.balance.toString())}</div>\n          </div>\n        </div> : null}\n      </Backdrop>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // todo: Fix Material UI backdrop cause a warning (findDomnode) in StrictMode\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  // <React.Fragment>\n  //   <App />\n  // </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}